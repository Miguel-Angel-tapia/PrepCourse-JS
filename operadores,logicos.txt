// si usamos distintos operadores logicos simultaneamente, debemos tener en cuenta la precedencia de estos!
// si usamos distintos operadores logicos simultaneamente, debemos tener en cuenta la precedencia de estos!
// si usamos distintos operadores logicos simultaneamente, debemos tener en cuenta la precedencia de estos!

1
operador and && : devuelve true, solo si los dos operandos son true, de lo contrario.
                  devuelve false
Las expresiones se evalúan en orden, y la computadora omitirá cualquier expresión redundante. En una declaración &&, si la primera expresión es false, la segunda expresión no se evaluará porque AMBAS expresiones deben ser true. 


2
operador or || : devuelve true, si uno o ambos operandos es true, de lo contrario.
                 devuelve false
Lo mismo para la declaración ||. Si la primera expresión es verdadero, la segunda no se evaluará porque solo debe haber una declaración verdadera para cumplir con los requisitos del operador. 


3
operador not ! : se podria decir que not! nos devuelve el valor contrario de el que tiene
                 por delante, es decir. !true nos devuelve false, y !false nos devuelve true 
Utiliza paréntesis. Como vimos en el segundo ejemplo de la negación !, utilizamos paréntesis para evaluar PRIMERO lo que estaba dentro de ellos, y luego aplicamos la negación. Podemos ajustar cualquier expresión entre paréntesis y se evaluará antes que toda la expresión en conjunto.